namespace font {
  FEAT_NONE : u32 = 0
  FEAT_SMCP : u32 = 1
  FEAT_ONUM : u32 = 2
  FEAT_HIST : u32 = 4
  FEAT_LIGA : u32 = 256
  FEAT_KERN : u32 = 65536

  H1_SANS     :=1
  H1_SCPT     :=2
  H3_GOTH_EN  :=3
  H3_GOTH_DE  :=4
  H3_GOTH_IT  :=5
  H2_ITAL     :=6
  H2_ITAL_SM  :=7
  H3_ITAL     :=8
  H2_SCPT     :=9
  H2_SRIF     :=10
  H2_SRIF_SM  :=11
  H2_SANS     :=12
  H1_SANS_SM  :=13
  H3_SRIF     :=14

  func _lookup[T](id:i32,x:T,flag:u32):i32;
  func _glyph(id:i32,gidx:i32,reso:i32):list[list[vec[f32,2]]];
  func _advance(id:i32,gidx:i32,hidx:i32,flag:u32):f32;
  typedef Font = {
    id : i32;
    func lookup(ch:i32,flag:u32):i32{
      return _lookup(.id,ch,flag);
    }
    func lookup(lig:list[i32],flag:u32):i32{
      return _lookup(.id,lig,flag);
    }
    func glyph(gidx:i32,reso:i32):list[list[vec[f32,2]]]{
      return _glyph(.id,gidx,reso);
    }
    func glyph(gidx:i32):list[list[vec[f32,2]]]{
      return .glyph(gidx,8);
    }
    func advance(gidx:i32,hidx:i32,flag:u32):f32{
      return _advance(.id,gidx,hidx,flag);
    }
    func advance(gidx:i32,hidx:i32):f32{
      return .advance(gidx,hidx,FEAT_KERN);
    }
  }
  func decode(bytes:list[u8]):Font;
  func decode(hfset:i32):Font;
}
