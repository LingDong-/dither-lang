include "std/font"
include "std/io"
include "std/gx"
include "std/list"

bytes := io.read_file("examples/assets/caslon.ttf");
tf := font.decode(bytes);

fsz := 150

func draw_polys(polys:list[list[vec[f32,2]]]){
  gx.begin_shape();
  for (i:=0; i < polys.length(); i++){
    for (j:=0; j < polys[i].length(); j++){
      gx.vertex(polys[i][j].x*fsz, polys[i][j].y*fsz+fsz);
    }
    gx.next_contour(1);
  }
  gx.end_shape(1);
}

gx.size(600,600);
gx.background(1.0,0.95,0.9);
gx.stroke(0.0);
{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Minimal Example",0,16);
  gx.fill(0,0.5);
  draw_polys(tf.glyph(tf.lookup('a',font.FEAT_NONE)));
  gx.pop_matrix();
}

gx.translate(200,0);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Low-Res Example",0,16);
  gx.fill(0,0.5);
  draw_polys(tf.glyph(tf.lookup('a',font.FEAT_NONE),1));
  gx.pop_matrix();
}

gx.translate(200,0);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Kerning Example",0,16);
  gx.fill(0,0.5);
  a := tf.lookup('T',font.FEAT_NONE);
  b := tf.lookup('o',font.FEAT_NONE);
  draw_polys(tf.glyph(a));
  gx.translate(tf.advance(a,b,font.FEAT_KERN)*fsz,0);
  draw_polys(tf.glyph(b));
  gx.pop_matrix();
}

gx.translate(-400,200);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Ligature Example",0,16);
  gx.fill(0,0.5);
  lig := list[i32]{'f','f','i'};
  draw_polys(tf.glyph(tf.lookup(lig,font.FEAT_LIGA)));
  gx.pop_matrix();
}

gx.translate(200,0);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Old Figures Example",0,16);
  gx.fill(0,0.5);
  a := tf.lookup('3',font.FEAT_NONE);
  b := tf.lookup('3',font.FEAT_ONUM);
  draw_polys(tf.glyph(a));
  gx.translate(tf.advance(a,b,font.FEAT_KERN)*fsz,0);
  draw_polys(tf.glyph(b));
  gx.pop_matrix();
}


gx.translate(200,0);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Non-ASCII Example",0,16);
  gx.fill(0,0.5);
  a := tf.lookup(0xdf,font.FEAT_NONE);
  b := tf.lookup(0xf1,font.FEAT_NONE);
  draw_polys(tf.glyph(a));
  gx.translate(tf.advance(a,b,font.FEAT_KERN)*fsz,0);
  draw_polys(tf.glyph(b));
  gx.pop_matrix();
}

gx.translate(-400,200);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Multiple Ligatures Example",0,16);
  gx.fill(0,0.5);
  codes := list[i32]{'f','i','r','s','t'};
  a := -1;
  while (codes.length()){
    b := tf.lookup(codes, font.FEAT_LIGA);
    gx.translate(tf.advance(a,b,font.FEAT_KERN)*fsz,0);
    draw_polys(tf.glyph(b));
    a = b;
  }
  gx.pop_matrix();
}


gx.translate(400,0);

{
  gx.push_matrix();
  gx.fill(0);
  gx.text("Distorted Example",0,16);
  gx.fill(0,0.5);
  
  a := tf.lookup('a',font.FEAT_NONE);
  polys := tf.glyph(a);
  for (i := 0; i < polys.length(); i++){
    for (j := 0; j < polys[i].length(); j++){
      ({x,y}) := polys[i][j];
      v := (x*x+y*y)**0.5*2;
      polys[i][j] = {x,y}*v;
    }
  }
  draw_polys(polys);
  gx.pop_matrix();
}

while (1) gx.poll();
