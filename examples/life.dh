include "std/arr"
include "std/math"
include "std/gx"
include "std/win"
include "std/time"

W := 64;
H := 64;
scl := 4;

brd := arr.make({H,W},0 as u8);
msk := 1

for (i := 0; i < W*H; i++){
  brd[i]=math.random()>0.5;
}

func step(){
  for (i := 0; i < H; i++){
    for (j := 0; j < W; j++){
      s := 0
      jl := j > 0
      jr := j < W-1;
      if (i > 0){
        if (brd[(i-1),j] & msk) s++;
        if (jl) if (brd[i-1,j-1] & msk) s++;
        if (jr) if (brd[i-1,j+1] & msk) s++;
      }
      if (i < H-1){
        if (brd[i+1,j] & msk) s++;
        if (jl) if (brd[i+1,j-1] & msk) s++;
        if (jr) if (brd[i+1,j+1] & msk) s++;
      }
      if (jl) if (brd[i,j-1] & msk) s++;
      if (jr) if (brd[i,j+1] & msk) s++;
      
      brd[i,j] &= ~(3-msk);
      
      if (brd[i,j] & msk){
        if (s == 2 || s == 3){
          brd[i,j] |= (3-msk);
        }
      }else if (s == 3){
        brd[i,j] |= (3-msk);
      }
    }
  }
}

gx.size(W*scl,H*scl);
gx.stroke_weight(scl);
gx.stroke(0.9,0.8,0.7);

md := 0

while (1){
  time.fps(120)
  
  gx.background(0.1,0.2,0.3);
  for (i := 0; i < H; i++){
    for (j := 0; j < H; j++){
      if (brd[i,j] & msk){
        gx.point(j*scl,i*scl);
      }
    }
  }
  step();
  msk = 3-msk;

  e := gx.poll();
  if (e.type==win.MOUSE_PRESSED || (e.type==win.MOUSE_MOVED && md)){
    md = 1;
    j : i32 = e.x / scl;
    i : i32 = e.y / scl;
    for (ii : i32 = math.max(i-2,0); ii < math.min(i+3,H); ii++){
      for (jj : i32 = math.max(j-2,0); jj < math.min(j+3,W); jj++){
        if (math.random()>0.5){
          brd[ii,jj] |= msk;
        }
      }
    }
  }else if (e.type == win.MOUSE_RELEASED){
    md = 0;
  }
}




